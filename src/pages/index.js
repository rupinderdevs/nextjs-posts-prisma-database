import Head from "next/head";
import { useRouter } from "next/router";
import prisma from "../../lib/prisma";
import Layout from "../../components/Layout";
import { useState } from "react";
import Card from "../../components/card";

export default function Home({ feed }) {
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const deletePost = async (postId) => {
    try {
      setLoading(true);
      await fetch("/api/post/delete?id=" + postId, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
      });

      setLoading(false);
      await router.push("/");
    } catch (error) {
      console.log("error", error);
      setLoading(false);
    }
  };

  return (
    <Layout>
      <Head>
        <title>Posts</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        {feed.length > 0 ? (
          feed.map(
            (item, index) => (
              <div key={index}>
                <Card
                  title={item.title}
                  content={item.content}
                  comments={item.comments.length}
                  onClick={() => deletePost(item.id)}
                  btnText={loading ? "Loading" : "Delete"}
                />
              </div>
            )
            // <div
            //   className="border border-gray-300 p-4 m-4 post-card"
            //   key={index}
            // >
            //   <a
            //     href={`posts/${item.id}`}
            //     className="text-primary hover:underline"
            //   >
            //     {item.title}
            //   </a>
            //   <p>{item.content}</p>
            //   <p>{item.comments.length} Comments</p>
            //   <div>
            //     <button
            //       onClick={() => deletePost(item.id)}
            //       className="bg-primary text-white px-4 my-4 py-1 rounded-md"
            //     >
            //       {loading ? "Loading" : "Delete"}
            //     </button>
            //   </div>
            // </div>
          )
        ) : (
          <div className="text-center">
            <p>No posts found.</p>
          </div>
        )}
      </div>
    </Layout>
  );
}

export const getStaticProps = async () => {
  const feed = await prisma.post.findMany({
    where: { published: true },
    include: {
      comments: {
        select: { content: true },
      },
    },
  });
  return {
    props: { feed },
    revalidate: 10,
  };
};
